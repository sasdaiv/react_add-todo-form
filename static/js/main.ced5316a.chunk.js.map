{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserId","userId","usersFromServer","find","getTodoId","listTodos","todosId","Math","max","App","useState","setListTodos","setTitle","setUser","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","prevlist","htmlFor","type","placeholder","value","onChange","target","replace","Number","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced5316a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserId(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getTodoId(listTodos: Todo[]): number {\n  const todosId = listTodos.map(todo => todo.id);\n\n  return Math.max(...todosId) + 1;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserId(todo.userId),\n}));\n\nfunction titleValidation(value: string) {\n  return value.replace(/^[a-zA-Zа-яА-Я0-9\\s]+$/g, '');\n}\n\nexport const App: React.FC = () => {\n  const [listTodos, setListTodos] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(titleValidation(event.target.value));\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUser(Number(event.target.value));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (title && user) {\n      const newTodo: Todo = {\n        id: getTodoId(listTodos),\n        title,\n        userId: user,\n        completed: false,\n        user: getUserId(user),\n      };\n\n      setListTodos(prevlist => [...prevlist, newTodo]);\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"textId\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            id=\"textId\"\n            data-cy=\"titleInput\"\n            name=\"Enter a title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"usertId\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"usertId\"\n            name=\"user\"\n            value={user}\n            onChange={handleChangeUser}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={listTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}